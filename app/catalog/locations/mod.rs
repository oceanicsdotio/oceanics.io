use serde::{Serialize,Deserialize};
use wasm_bindgen::prelude::*;

/// Location data includes the type and coordinates,
/// usually in geojson format. Sometime this may be
/// unknown or not applicable, such as a place name
/// without a specific coordinate.
#[wasm_bindgen(getter_with_clone)]
#[derive(Clone, Debug, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct LocationData {
    pub r#type: String,
    pub coordinates: Vec<f64>,
}

#[wasm_bindgen(getter_with_clone)]
#[derive(Debug, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Locations {
    /// Unique identifier used as database key
    pub uuid: String,
    /// Human-readable name of the Location
    pub name: String,
    /// Description for disambiguation and web display,
    /// often autogenerated locations may not have descriptions,
    /// and this may only apply to well-known locations.
    pub description: Option<String>,
    /// The type of encoding used for the location attribute,
    /// usually geojson.
    #[wasm_bindgen(js_name=encodingType)]
    pub encoding_type: Option<String>,
    /// Location data includes the type and coordinates
    pub location: Option<LocationData>,
}
